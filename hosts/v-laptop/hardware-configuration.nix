# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/271e936a-178b-4d50-96c8-16114b4022d3";
      fsType = "ext4";
    };

  #NOTE: the more important, the closer to 0 on the partition table
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0BD8-E8BE";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

	# to get the id, do `blkid` for the partition, and take the `UUID` value
	boot.resumeDevice = "/dev/disk/by-uuid/4fc0e3da-5640-4939-a5e2-e19ad7419e46"; # for hibernation. NB: make sure that it matches the swap partition. Must be updated if it changes
	swapDevices = [ 
		{ device = "/dev/disk/by-uuid/4fc0e3da-5640-4939-a5e2-e19ad7419e46"; }
	];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0f4u1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
