# copied from [ryan](<https://github.com/ryan4yin/nix-config/blob/main/hosts/idols-ai/impermanence.nix>), check if he has a newer version when you do get around to implementing this
#TODO: put it online. Currently have defined the outline, but not sure about the logistics as a) /persist takes up 300GB b) how would it interact with my adding tens of gigabytes of build artifacts to my rust projects which are then persisted there.
#TODO: spilt to /persist and /cache, latter for things that are easy to recover, like `XDG_STATE` or `XDG_SHARE` and backup only the former.
{ impermanence
, pkgs
, lib
, ...
}:
{
  imports = [
    impermanence.nixosModules.impermanence
  ];

  environment.systemPackages = [
    # `sudo ncdu -x /`
    pkgs.ncdu
  ];

  # There are two ways to clear the root filesystem on every boot:
  ##  1. use tmpfs for /
  ##  2. (btrfs/zfs only)take a blank snapshot of the root filesystem and revert to it on every boot via:
  ##     boot.initrd.postDeviceCommands = ''
  ##       mkdir -p /run/mymount
  ##       mount -o subvol=/ /dev/disk/by-uuid/UUID /run/mymount
  ##       btrfs subvolume delete /run/mymount
  ##       btrfs subvolume snapshot / /run/mymount
  ##     '';
  #
  #  See also https://grahamc.com/blog/erase-your-darlings/

  #NOTE: impermanence only mounts the directory/file list below to /persist
  # If the directory/file already exists in the root filesystem, you should
  # move those files/directories to /persist first!
  environment.persistence."/persist" = {
    # sets the mount option x-gvfs-hide on all the bind mounts
    # to hide them from the file manager
    hideMounts = true;
    directories = [
      "/etc/NetworkManager/system-connections"
      "/etc/ssh"
      "/etc/nix/inputs"
      "/etc/secureboot" # lanzaboote - secure boot
      "/etc/agenix/" # secrets

      "/var/log"
      "/var/lib"

      # created by modules/nixos/misc/fhs-fonts.nix
      # for flatpak apps
      # "/usr/share/fonts"
      # "/usr/share/icons"
    ];
    files = [
      "/etc/machine-id"
    ];

    # the following directories will be passed to /persist/home/$USER
    users.v = {
      directories = lib.lists.flatten [
        "s"
        "g"
        "tmp"
        "nix"
        ".data"
        "whiteboard"

        "Downloads"
        "Videos"
        "Documents"
        "Music"
        "Images"
        {
          directory = ".gnupg";
          mode = "0700";
        }
        {
          directory = ".ssh";
          mode = "0700";
        }

        # atuin, nvim, remmina, flatpak, ...
        ".local/share"
        ".local/state"

        [
          #misc
          ".pki"
        ]

        [
          # cloud native, on the offchance I am required to use them over just nix
          {
            # pulumi - infrastructure as code
            directory = ".pulumi";
            mode = "0700";
          }
          {
            directory = ".aws";
            mode = "0700";
          }
          {
            directory = ".docker";
            mode = "0700";
          }
          {
            directory = ".kube";
            mode = "0700";
          }
        ]

        [
          # annoying apps that persist state all other the place
          [
            # in ~/.config
            ".config/vesktop"
            ".config/discord"
            ".config/google-chrome"
            ".config/Code" # /User ?
            ".config/github-copilot"
          ]

          [
            # remote desktop
            ".config/freerdp"
            ".config/remmina"
          ]

          [
            # in $HOME
            ".vscode"
            ".mozilla"
            ".wakatime" # dev monitoring
            ".openvpn"
          ]

          [
            # language package managers
            ".npm"
            ".conda" # generated by `conda-shell`
            "go"
            ".cargo" # rust
            ".m2" # maven
            ".gradle"
            ".elan" # lean
          ]
          [
            # in case of future use
            ".config/blender"
            ".config/LDtk"
          ]
        ]
      ];
      files = [
        ".wakatime.cfg"
      ];
    };
  };
}
