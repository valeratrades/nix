# currently must rewrite _all_ the desired rustflags for each target, - they don't stack


[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "link-arg=-fuse-ld=mold"] # have a very cursed script to overwrite this for nightly
linker = "clang"


[profile.release]
debug = 0

[profile.dev]
debug = true

# supposed to be faster than llvm, following Orion on this blindly
#codegen-backend = "cranelift" # doesn't work on nix rn (2024/12/17)

[build]
rustc-wrapper = "sccache"

[alias]
w = "watch"
a = "add"
u = "update"
m = "machete"
re = "insta review"
tr = "insta test --review"
f = "fmt"
x = "fix --allow-dirty --allow-no-vcs"
xc = "clippy --fix --allow-dirty --allow-no-vcs"
s = "sweep --recursive --installed" # only leave currently active artifacts
rel = "release --no-confirm --execute"
so = "sort -wg"

# overriding defaults in favor of cargo-limit alternatives
# if `--all-features` is needed for better dev experience, override these shortcuts with it on per-project basis. eg: "lbuild --all-features"
b = "lbuild"
c = "lcheck"
t = "nextest run"
r = "lrun"

[profile.dev.package]
v_utils.opt-level = 1 # Orion says 3 is too much, suggested 2. 2 would lead to rebuild on `release` builds anyways, so going with just default 1.
bevy.opt-level = 3
bevy_editor_pls.opt-level = 3
bevy_panorbit_camera.opt-level = 3
insta.opt-level = 3
#similar.opt-level = 3

[cargo-new]
# VCS to use ('git', 'hg', 'pijul', 'fossil', 'none')
vcs = "none" # set it up with my `can` script, don't need this
